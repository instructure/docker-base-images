worker_processes <%= ENV.fetch('NGINX_WORKER_COUNT', (ENV.fetch('NODE_ENV') == 'production' ? 15 : 1)) %>;
pid /run/nginx.pid;
daemon off;
user docker;

#Add files to white list env variables
include /usr/src/nginx/main.d/*.conf;

events {
    worker_connections  1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    passenger_default_user docker;
    passenger_user docker;
    passenger_friendly_error_pages off;
    passenger_show_version_in_header off;
    passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
    passenger_ruby /usr/bin/ruby;
    passenger_app_env <%= ENV.fetch('NODE_ENV', 'production') %>;
    passenger_max_pool_size <%= ENV.fetch('PASSENGER_MAX_POOL_SIZE', '6') %>;
    passenger_min_instances <%= ENV.fetch('PASSENGER_MIN_INSTANCES', '1') %>;

    more_clear_headers 'X-Powered-By';
    server_tokens off;
    client_body_timeout    65;
    client_header_timeout  65;
    client_max_body_size <%= ENV.fetch('NGINX_MAX_UPLOAD_SIZE', '10m') %>;

    include       /etc/nginx/mime.types;
#Add files here to add additional nginx options
    include      /usr/src/nginx/conf.d/*.conf;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

<% if ENV.fetch('CG_ENVIRONMENT', 'local') == 'local' %>
    server {
        listen       80;
        server_name  localhost;
        root <%= ENV.fetch('APP_ROOT_PATH', '/usr/src/app/public') %>;
        passenger_enabled on;
        include      /usr/src/nginx/location.d/*.conf;
    }

<% else %>
    server {
        listen       80;
        server_name  localhost;
        root <%= ENV.fetch('APP_ROOT_PATH', '/usr/src/app/public') %>;

        set_real_ip_from 10.0.0.0/8;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

    location / {
        if ($http_x_forwarded_proto != 'https') {
          rewrite ^ https://$host$request_uri? permanent;
    }
        passenger_enabled on;
#Occasionally you may need to add some additonial option to your location block, you can add files here to do so.
        include      /usr/src/nginx/location.d/*.conf;
    }
    location <%= ENV.fetch('CG_INSTANCE_POOL_HEALTH_CHECK_PATH') %> {
        passenger_enabled on;
    }
    location ~ /\.git {
        deny all;
    }
  }
<% end %>
}
